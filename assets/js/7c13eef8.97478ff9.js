"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7983],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(r),f=a,u=c["".concat(d,".").concat(f)]||c[f]||m[f]||o;return r?n.createElement(u,l(l({ref:t},p),{},{components:r})):n.createElement(u,l({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=c;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8064:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:3},l="Error codes",i={unversionedId:"frontend-integration/sdk/errors",id:"frontend-integration/sdk/errors",title:"Error codes",description:"---",source:"@site/docs/frontend-integration/sdk/errors.md",sourceDirName:"frontend-integration/sdk",slug:"/frontend-integration/sdk/errors",permalink:"/frontend-integration/sdk/errors",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"solidoSidebar",previous:{title:"Staking & UnStaking",permalink:"/frontend-integration/sdk/stake"},next:{title:"Banner",permalink:"/frontend-integration/sdk/banner"}},d={},s=[{value:"Example",id:"example",level:4}],p={toc:s};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"error-codes"},"Error codes"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"All ",(0,a.kt)("strong",{parentName:"p"},"known")," errors we wrap adding some extra fields to make it easier controlling exceptions.\nAlso, it's possible to use ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"message"))," field of ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"Error"))," object to inform users about the details of exception."),(0,a.kt)("p",null,"Additional fields to ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"Error"))," object:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"em"},"code: number"))," - error code"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"em"},"codeDesc: string"))," - error code definition")),(0,a.kt)("p",null,"This table lists the error code information returned by the SolidoSDK when it is called."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Error code"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Error code definition"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Message"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"100"),(0,a.kt)("td",{parentName:"tr",align:"left"},"CANNOT_CONFIRM_TRANSACTION"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Got error from Solana blockchain during transaction confirmation, so this error could have different messages (signature is not base58 encoded/transaction was not confirmed in N seconds/signature has invalid length etc.)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"200"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NO_VALIDATORS"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Couldn't fetch validators list")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"300"),(0,a.kt)("td",{parentName:"tr",align:"left"},"UNSUPPORTED_CLUSTER"),(0,a.kt)("td",{parentName:"tr",align:"left"},"SolidoSDK doesn't support devnet, specify mainnet-beta or testnet")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"301"),(0,a.kt)("td",{parentName:"tr",align:"left"},"UNSTAKE_UNAVAILABLE"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Sorry, unStake is not available right now. Please contact lido developers for details.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"302"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NO_PUBLIC_KEY"),(0,a.kt)("td",{parentName:"tr",align:"left"},"SolidoSDK: publicKey is null in wallet")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"303"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NO_ACCOUNT_INFO"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Couldn't fetch getAccountInfo")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"304"),(0,a.kt)("td",{parentName:"tr",align:"left"},"NO_APY_DATA"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Couldn't fetch apy data")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"400"),(0,a.kt)("td",{parentName:"tr",align:"left"},"EXCEED_MAX"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Amount must not exceed MAX(..)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"401"),(0,a.kt)("td",{parentName:"tr",align:"left"},"PUBLIC_KEY_IS_PDA"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Your publicKey is PDA type. Please use allowOwnerOffCurve=true flag.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"402"),(0,a.kt)("td",{parentName:"tr",align:"left"},"EXCEED_MIN"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Amount must be greater than rent-exempt fee(..)")))),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"try {\n  const { transactionHash, stSolAccountAddress } = await solidoSDK.stake({\n    amount: 20, // The amount of SOL-s which need to stake\n    wallet: wallet, // Wallet instance with 1 Sol left\n  });\n} catch (error) {\n  console.error(error.code); // -> 400\n  console.error(error.codeDesc); // -> 'EXCEED_MAX'\n  console.error(error.message); // -> 'Amount must not exceed MAX(0.9988)'\n}\n")))}m.isMDXComponent=!0}}]);