"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2769],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,h=d["".concat(s,".").concat(u)]||d[u]||p[u]||o;return n?a.createElement(h,r(r({ref:t},m),{},{components:n})):a.createElement(h,r({ref:t},m))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const o={},r="Maintenance",l={unversionedId:"operation/maintenance",id:"operation/maintenance",title:"Maintenance",description:"Some tasks in Solido, such as claiming staking rewards, need to happen",source:"@site/docs/operation/maintenance.md",sourceDirName:"operation",slug:"/operation/maintenance",permalink:"/operation/maintenance",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solidoSidebar",previous:{title:"The Solido utility",permalink:"/operation/the-solido-utility"},next:{title:"Multisig guide",permalink:"/operation/multisig-guide"}},s={},c=[{value:"Trusted maintainers",id:"trusted-maintainers",level:2},{value:"Maintainer operators",id:"maintainer-operators",level:2},{value:"Obtaining the maintenance daemon",id:"obtaining-the-maintenance-daemon",level:2},{value:"Running the maintenance daemon",id:"running-the-maintenance-daemon",level:2},{value:"RPC node requirements",id:"rpc-node-requirements",level:2},{value:"Claiming validation fees",id:"claiming-validation-fees",level:2}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"maintenance"},"Maintenance"),(0,i.kt)("p",null,"Some tasks in Solido, such as claiming staking rewards, need to happen\nperiodically. We refer to these as ",(0,i.kt)("em",{parentName:"p"},"maintenance")," tasks. The maintenance daemon\n(also called \u201cbot\u201d) watches the on-chain state, and executes maintenance tasks\nas necessary. It is fine, and even encouraged for redundancy, if multiple\nparties run a maintenance daemon."),(0,i.kt)("h2",{id:"trusted-maintainers"},"Trusted maintainers"),(0,i.kt)("p",null,"Most maintenance tasks can be executed by anybody. However, staking deposits is\nlimited to a list of ",(0,i.kt)("em",{parentName:"p"},"maintainers")," at the moment. This simplifies the on-chain\nprogram, but it also gives maintainers great power and responsibility over the\nstake distribution. The maintenance daemon that maintainers are expected to use,\ntargets a uniform stake distribution, but maintainers in theory have the power\nto disturb this balance. We plan to move the stake distribution logic into the\non-chain program in a future version, to eliminate the need for trusted\nmaintainers."),(0,i.kt)("h2",{id:"maintainer-operators"},"Maintainer operators"),(0,i.kt)("p",null,"Most of the Solido maintenance tasks can be executed by anybody, but there still\nneeds to be ",(0,i.kt)("em",{parentName:"p"},"somebody")," who submits the transaction. The maintenance bot\nautomates this. The bot will also execute maintenance tasks that are restricted\nto the set of trusted maintainers. For v1 the set of trusted maintainers who run\nthe bot consists of validators who are also part of the multisig:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"P2P"),(0,i.kt)("li",{parentName:"ul"},"Figment"),(0,i.kt)("li",{parentName:"ul"},"Chorus One"),(0,i.kt)("li",{parentName:"ul"},"Staking Facilities")),(0,i.kt)("p",null,"Uptime of the maintenance bot is not critical. As long as ",(0,i.kt)("em",{parentName:"p"},"somebody")," at least\nbriefly runs the bot once every epoch, Solido will work fine. Because multiple\nparties run an instance, it is okay if an instance is inactive for a bit (e.g.\nto reboot the host)."),(0,i.kt)("h2",{id:"obtaining-the-maintenance-daemon"},"Obtaining the maintenance daemon"),(0,i.kt)("p",null,"The maintenance daemon is part of the ",(0,i.kt)("inlineCode",{parentName:"p"},"solido")," utility. You can either build\nit from source with Cargo, or use the ",(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/chorusone/solido-maintainer"},(0,i.kt)("inlineCode",{parentName:"a"},"chorusone/solido-maintainer")),"\ncontainer image that includes a prebuilt version."),(0,i.kt)("h2",{id:"running-the-maintenance-daemon"},"Running the maintenance daemon"),(0,i.kt)("p",null,"The maintenance daemon is part of the ",(0,i.kt)("inlineCode",{parentName:"p"},"solido")," utility and can be started with\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"run-maintainer")," subcommand. Like all ",(0,i.kt)("inlineCode",{parentName:"p"},"solido")," commands, it can be\nconfigured either on the command line, with a json config file, or through\nenvironment variables. See also ",(0,i.kt)("a",{parentName:"p",href:"/operation/the-solido-utility#configuration"},"the section on ",(0,i.kt)("inlineCode",{parentName:"a"},"solido")," configuration"),"\nSee ",(0,i.kt)("inlineCode",{parentName:"p"},"solido --help")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"solido run-maintainer --help")," for the options specific\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"run-maintainer"),". Beware that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The public Solana RPC endpoints are rate-limited, and require trusting the\nserver. If possible, point ",(0,i.kt)("inlineCode",{parentName:"p"},"--cluster")," at the RPC endpoint of your own\nvalidator, instead of a public one like\n",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.mainnet-beta.solana.com"),". See also ",(0,i.kt)("a",{parentName:"p",href:"#rpc-node-requirements"},"the section about the RPC\nnode requirements"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The key used to sign (configured with ",(0,i.kt)("inlineCode",{parentName:"p"},"--keypair-path"),") needs to be listed as\na maintainer in the Solido instance. You can view the list of maintainers\nwith ",(0,i.kt)("inlineCode",{parentName:"p"},"solido show-solido"),". The account needs to be funded, as it pays for the\ntransaction fees of maintenance transactions."))),(0,i.kt)("p",null,"When running, the maintenance daemon periodically polls the on-chain state, and\nexecutes maintenances transactions if necessary. It also exposes an http server\nthat serves a Prometheus ",(0,i.kt)("inlineCode",{parentName:"p"},"/metrics")," endpoint. These metrics include both metrics\nabout Solido in general (extracted from the on-chain state), and metrics about\nthe daemon. The following metrics are useful for monitoring:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"solido_maintainer_balance_sol"),": The balance of the maintainer account\n(configured with ",(0,i.kt)("inlineCode",{parentName:"p"},"--keypair-path"),"). You can alert on this value dropping\nbelow e.g. 0.1 SOL; to top up the account in a timely fashion.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"solido_maintenance_polls_total"),": The number of times we refreshed the\non-chain state. If this value stops increasing, something is wrong.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"solido_maintenance_errors_total"),": The number of times we encountered an\nerror. If the rate of this metric gets close to the poll rate, that means\nmost iterations are failing, and investigation is needed. Occasional errors\nare expected, especially when using a public RPC endpoint."))),(0,i.kt)("h2",{id:"rpc-node-requirements"},"RPC node requirements"),(0,i.kt)("p",null,"The Solido maintenance daemon puts some demands on the RPC node that it connects\nto:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The RPC must be enabled with ",(0,i.kt)("inlineCode",{parentName:"p"},"--full-rpc-api"),".\nSince ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/solana/releases/tag/v1.9.6"},"Solana 1.9.6"),"\nby default only the minimal set of RPC methods is enabled, so the full set\nmust be enabled explicitly.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set ",(0,i.kt)("inlineCode",{parentName:"p"},"--max-multiple-accounts")," to a sufficiently large value. (1000 should be\nplenty for now.) Solido relies on ",(0,i.kt)("inlineCode",{parentName:"p"},"GetMultipleAccounts")," to read atomic\nsnapshots of the chain state. For correctness, it must be able to read all\naccounts in a single call. Solido needs to read multiple accounts per\nvalidator (multiple stake accounts, the vote account, the config account for\nmetadata, etc.). Solido will log a warning to stdout when it can\u2019t request\nall accounts in a single call.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Enable account indexing of the config program with ",(0,i.kt)("inlineCode",{parentName:"p"},"--account-index\nprogram-id")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--account-index-include-key Config1111111111111111111111111111111111111"),".\nDue to the way Solana implements validator metadata, one needs to list all\naccounts owned by the config program to find the metadata for a particular\nvalidator. For this query to be fast, account indexing is needed. Without\nthese flags, the ",(0,i.kt)("inlineCode",{parentName:"p"},"GetProgramAccounts")," call will time out."))),(0,i.kt)("h2",{id:"claiming-validation-fees"},"Claiming validation fees"),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"/internals/commission#validation-fee-credit"},"technical reasons"),", Solido\nholds on to any validation fees until the validator withdraws them into the\nvalidator\u2019s stSOL account; they are not paid into the account automatically by\nthe on-chain program. To alleviate this, the maintenance bot will withdraw the\nrewards automatically for all validators, into their stSOL accounts."))}p.isMDXComponent=!0}}]);