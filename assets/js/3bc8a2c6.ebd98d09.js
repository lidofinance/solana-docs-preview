"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1239],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,v=u["".concat(p,".").concat(m)]||u[m]||s[m]||r;return n?o.createElement(v,l(l({ref:t},d),{},{components:n})):o.createElement(v,l({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var c=2;c<r;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(7462),i=(n(7294),n(3905));const r={title:"development",description:"Overview of development in Lido on Solana",keywords:["development","developers","lido","solana"],sidebar_position:1},l="Development Overview",a={unversionedId:"development/development",id:"development/development",title:"development",description:"Overview of development in Lido on Solana",source:"@site/docs/development/development.md",sourceDirName:"development",slug:"/development/",permalink:"/development/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"development",description:"Overview of development in Lido on Solana",keywords:["development","developers","lido","solana"],sidebar_position:1},sidebar:"solidoSidebar",previous:{title:"Multisig guide",permalink:"/operation/multisig-guide"},next:{title:"specification",permalink:"/development/specification/"}},p={},c=[{value:"Building the project",id:"building-the-project",level:2},{value:"Building the container image",id:"building-the-container-image",level:3},{value:"Building locally",id:"building-locally",level:3},{value:"CLI",id:"cli",level:4},{value:"On-Chain Programs",id:"on-chain-programs",level:4},{value:"Specification",id:"specification",level:2}],d={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"development-overview"},"Development Overview"),(0,i.kt)("h2",{id:"building-the-project"},"Building the project"),(0,i.kt)("p",null,"The project can be built in either of two ways: in the supplied container or locally."),(0,i.kt)("h3",{id:"building-the-container-image"},"Building the container image"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/development/building-docker-image"},"building the docker image")," document gives detailed instructions on how to build and run the container supplied in the repo for testing and developing."),(0,i.kt)("h3",{id:"building-locally"},"Building locally"),(0,i.kt)("p",null,"In order to build Lido on Solana locally, one will need a number of prerequisites:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/learn/get-started"},"Rust toolchain")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.solana.com/cli/install-solana-cli-tools"},"Solana toolchain")),(0,i.kt)("li",{parentName:"ul"},"Misc System Packages: libudev-dev, libhidapi-dev, pkg-config, openssl (these are the package names for Debian, please source equivalents for your OS is they are not already installed)")),(0,i.kt)("h4",{id:"cli"},"CLI"),(0,i.kt)("p",null,"To build/test the CLI, one can use the normal cargo commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"cargo build\ncargo test\n")),(0,i.kt)("h4",{id:"on-chain-programs"},"On-Chain Programs"),(0,i.kt)("p",null,"For the on-chain parts of the repo, one must use the bpf equivalent commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"cargo build-bpf\ncargo test-bpf\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: The BPF commands require the Solana SDK to be installed as was previously stated.")),(0,i.kt)("h2",{id:"specification"},"Specification"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/development/specification/"},"Specification")," document is a deeper dive into the code of Lido on Solana to tour the intent and implementation of the on-chain program and the cli."))}s.isMDXComponent=!0}}]);